*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
.container{
    height: 100vh;
    width: 100vw;
    background-color: rgb(74, 64, 64);
    display: grid;
    padding: 3rem;
    border: 5px solid black;
    grid-template-columns: repeat(3,1fr);
    grid-template-rows: repeat(3,1fr);
    gap: 1rem;
    

    justify-items: end;
    /* justify-items: center;
    align-items: center; */
    place-items: center;

    
   

}
   
.item{

    height: 150px;
    width: 150px;
    border: 2px solid white;
    background-color: goldenrod;
    border: 5px solid green;
    font-size: 2.5rem;
    display: flex;
    justify-content: center;
    align-items: center;

    /* justify-self: start;
    justify-self: end; */
    /* align-self: start;
    align-self: end;
    place-self: center; */
    /* align-self: stretch;  */
    /* doesnt strecth when height and width is given */
    /* place-self: end; */
    /* justify-self: end; */
    /* align-self: end;
    align-self: start; */
    /* place-self: start;
    place-self: end; */
    
  

}



/* for display grid there will be grid/child items

for container or parent properties are
justify-items: start/end/center/stretch 
align- items: same
place-items: same*/


/* for child/grid items properties are
justify-self:start/end/stretch
align-self:same 
place-self: same
 */

/* if we want to flow the content in the item
use display flex */


/* grid handles the layout operation
flex handles the direction of content flow */
